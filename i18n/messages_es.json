{
	"pathLogic" : "Lógica",

	"nameTrue"    : "Valor lógico verdadero",
	"literalTrue" : "verdadero",
	"leafTrue"    : "verdadero",

	"nameFalse"    : "Valor lógico falso",
	"literalFalse" : "false",
	"leafFalse"    : "falso",

	"nameNegation"     : "Negación lógica",
	"literalNegation"  : "¬",
	"mnemonicNegation" : "no",
	"leafNegation"     : "Negación (no)",

	"nameConjunction"     : "Conjunción lógica",
	"operatorConjunction" : "∧",
	"mnemonicConjunction" : "y",
	"leafConjunction"     : "Conjunción (y)",

	"nameDisjunction"     : "Disyunción lógica",
	"operatorDisjunction" : "∨",
	"mnemonicDisjunction" : "o",
	"leafDisjunction"     : "Disyunción (o)",

	"nameImplication"     : "Implication lógica",
	"operatorImplication" : "⟶",
	"mnemonicImplication" : "implica",
	"leafImplication"     : "Implicación (si)",

	"nameEquivalence"     : "Equivalencia lógica",
	"operatorEquivalence" : "⟺",
	"mnemonicEquivalence" : "equivale",
	"leafEquivalence"     : "Equivalencia (si y sólo si)",

	"nameExclusiveDisjunction"     : "Disyunción lógica exclusiva",
	"operatorExclusiveDisjunction" : "⊕",
	"mnemonicExclusiveDisjunction" : "ox",
	"leafExclusiveDisjunction"     : "Disyunción exclusiva (ox)",
	
	"pathBigConjunction"          : "Logic.∧ Gran conjunción",
	"pathBigDisjunction"          : "Logic.∨ Gran disyunción",
	"pathBigEquivalence"          : "Logic.⇔ Gran equivalencia",
	"pathBigExclusiveDisjunction" : "Logic.⊕ Gran disyunción exclusiva",
	
	"nameBigConjunction"          : "Gran conjunción",
	"nameBigDisjunction"          : "Gran disyunción",
	"nameBigEquivalence"          : "Gran equivalencia",
	"nameBigExclusiveDisjunction" : "Gran disyunción exclusiva",
	
	"childBigConjunction0"           : "Expresión a ser usada para crear la gran conjunción",
	"childBigDisjunction0"           : "Expresión a ser usada para crear la gran disyunción",
	"childBigEquivalence0"           : "Expresión a ser usada para crear la gran equivalencia",
	"childBigExclusiveDisjuncation0" : "Expresión a ser usada para crear la gran disyunción exclusiva",
	"childBig1"                      : "Símbolo a ser utilizado para la iteración",
	"childBig23"                     : "Lista contenendo los elementos a iterar",
	"childBig2X"                     : "Valor inicial de la iteración",
	"childBig3"                      : "Valor final de la iteración",
	"childBig4"                      : "Valor de salto de la iteración",
	
	"namePredicate"   : "Predicado",
	"leafPredicate0"  : "Predicado",
	"leafPredicateN"  : "Predicado(...)",
	"enterPredicate"  : "Introduzca el nombre de predicado",
	"updatePredicate" : "Actualice el nombre de predicado",
	"actionPredicate" : "Editar nombre del predicado...",

	"pathFirstOrder" : "Lógica.Primer órden",

	"mnemonicForAll" : "∀",
	"nameForAll"     : "Cuantificación universal",
	"leafForAll"     : "∀",

	"mnemonicExists" : "∃",
	"nameExists"     : "Cuantificación existencial",
	"leafExists"     : "∃"
}

